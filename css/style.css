/*! normalize.css v3.0.1 | MIT License | git.io/normalize */img,legend{border:0}legend,td,th{padding:0}.logo,sub,sup{position:relative}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}.footer,.header{background:#e1e1e1}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}.footer__cell,.logo__img,.logo__title{vertical-align:top}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}.btn,.logo__title{text-transform:uppercase}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}.container,body *{box-sizing:border-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}.header{height:92px}.logo__img{position:absolute;left:0;top:-10px;display:inline-block}.logo__title{display:inline-block;margin:0 0 0 200px;font-size:22px;font-weight:700}.footer{position:relative;overflow:hidden;padding:80px 0;font-size:14px;line-height:1.6}.footer::before{position:absolute;left:10px;top:-60px;width:1457px;height:379px;content:'';background:url(../img/folen.png) no-repeat}.footer__cell{display:table-cell;width:25%}.footer__cell_wide{width:50%;text-align:right}.footer__caption{display:block;margin-bottom:10px;font-size:18px;font-weight:600}.develop img,.develop p,.menu__item{display:inline-block;vertical-align:top}.footer__list{margin:0;padding:0;list-style:none}.footer__item{margin-bottom:3px}.footer p{margin:0 0 10px}.develop{padding:15px;margin:50px 0 0 auto;width:250px;border:1px solid #b0b0b0;text-align:left;line-height:1}.develop p{margin:0 0 0 5px;font-size:12px}.develop i{font-size:8px;font-style:normal}.menu,.slide__content p{font-size:18px;font-weight:600}.menu{margin-left:180px}.drop,.menu__list{margin:0;list-style:none}.menu__list{padding:0}.menu__item{position:relative;z-index:3}.menu__item:hover .menu__link{color:#7e0f0f;background:#fff68c}.menu__item:hover>.drop{display:block}.menu__link{display:inline-block;float:left;vertical-align:top;padding:20px;text-decoration:none}.btn_allnews,.btn_lk{float:right}.menu__link a{color:inherit}.drop{display:none;position:absolute;left:0;top:100%;background:#fff68c;padding:10px 50px 20px 20px;white-space:nowrap}.drop__item{margin:10px 0}.drop__item:first-child{margin-top:0}.drop__item:last-child{margin-bottom:0}.events__slider{margin:0;padding:0;list-style:none;overflow:hidden;max-width:1280px}.slide{position:relative;display:inline-block;vertical-align:top;width:100%;height:454px}.slide__content,.slide__img{position:absolute;left:0;bottom:0}.slide__img{top:0;right:0}.about__program a::before,.about__program::before{top:50%;content:''}.slide__content{width:100%;padding:42px 50px;color:#fff;background:rgba(72,0,0,.8)}.slide__content p{margin:0}.slide__content strong{display:inline-block;margin-bottom:15px;font-size:30px;font-weight:600}.about{display:table;margin:60px 0;width:100%}.about__program{position:relative;display:table-cell;vertical-align:middle;width:25%;text-align:center}.about__program::before{position:absolute;z-index:-1;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:118px;height:118px;border-radius:50%;background:#fff68c}.about__program a::before,.btn_lk::before{-webkit-transform:translateY(-50%) translate3d(0,0,0)}.about__program a{position:relative;left:10px;display:inline-block;padding-left:100px;font-size:24px;line-height:1;text-decoration:none;width:220px;text-align:left}.about__program a::before{position:absolute;left:0;transform:translateY(-50%) translate3d(0,0,0);width:83px;height:81px;background:url(../img/icons/programma.png) no-repeat}.about__text-wrap{width:470px;margin:0 auto 0 20px}.about__text{display:table-cell;vertical-align:top;padding:60px 0;width:75%;background:url(../img/karlin.jpg) right top no-repeat}.about__text p{font-size:15px;margin:0 0 20px}.news__list{display:table;width:100%;margin:30px 0;padding:0;list-style:none}.news__item{position:relative;display:table-cell;vertical-align:top;width:33%}.news__pic,.news__text{display:inline-block;vertical-align:top}.news__pic{width:75px;overflow:hidden}.news__pic img{max-width:100%}.news__text{max-width:260px;width:calc(100% - 100px);margin:-5px 0 0 15px;color:#7e0f0f;text-decoration:underline;line-height:1.6}.pagination__btn,.pagination__page a,.sidebar__menu-item a{text-decoration:none}.news__link{position:absolute;left:0;top:0;right:0;bottom:0}.sponsor{position:relative;margin:125px 0;padding:70px 50px;border:2px solid #ededed}.sponsor__title{position:absolute;left:50%;top:-36px;padding:0 15px;color:#7b7b7b;background:#fff;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.docs,.sponsor__list{margin:0;padding:0;list-style:none}.sponsor__list{display:table;width:100%}.sponsor__item{display:table-cell;vertical-align:middle;width:20%;text-align:center}.docs{width:100%;max-width:760px}.docs__item{position:relative;display:block;margin-left:30px;padding-left:80px;min-height:100px;margin-bottom:20px}.docs__info,.docs__name,.sidebar{display:inline-block}.docs__item::before{position:absolute;left:0;top:0;width:39px;height:46px;content:'';background:url(../img/icons/doc.png) no-repeat}.btn_dwnld::before,.btn_lk::before{top:50%;content:''}.docs__info{width:440px;margin-right:80px}.docs__name{margin:0 0 10px;font-size:18px;color:#7e0f0f}.docs__update{margin:0;font-size:14px}.sidebar{vertical-align:top;width:295px}.sidebar__block{display:block;padding:30px;margin-bottom:30px;background:#e1e1e1}.sidebar__menu{margin:0;padding:0;list-style:none;font-size:18px;font-weight:600}.sidebar__menu-item{margin-bottom:10px}.sidebar__caption{font-size:24px;font-weight:600;margin:0 0 15px}.sidebar__news{margin:0;padding:0;list-style:none;color:#7e0f0f}.sidebar__news-item{position:relative;padding-bottom:20px;margin-bottom:20px}.sidebar__news-item::after{position:absolute;bottom:0;left:-28px;width:calc(100% + 56px);height:1px;content:'';background:#a3a3a3}.btn,.container{position:relative}.sidebar__news-item:last-child{margin-bottom:0;padding-bottom:0}.sidebar__news-item:last-child::after{display:none}.partners{margin:0;padding:0 0 75px;list-style:none;border-bottom:1px solid #acacac}.partners__item{margin-bottom:32px}.partners__item:last-child{margin-bottom:0}.partners__photo{display:inline-block;vertical-align:top}.partners__info{display:inline-block;vertical-align:top;margin-left:20px}.partners__name{display:inline-block;font-size:18px;color:#7e0f0f;margin-bottom:12px}.partners__company{display:block;font-size:14px;color:#777}.pagination{margin:40px 0;font-size:14px;color:#444}.pagination__btn{display:inline-block;margin:0;padding:0 16px;height:32px;line-height:28px;white-space:nowrap;border:2px solid #eff0f1;border-radius:20px}.pagination__btn.disabled{pointer-events:none;color:#aab1b4}.pagination__pages{display:inline-block;vertical-align:top;margin:0;padding:0;list-style:none}.pagination__page{display:inline-block;vertical-align:top;margin:0 2px}.pagination__page a{display:inline-block;vertical-align:top;width:32px;height:32px;line-height:30px;border-radius:50%;background:#eff0f1;text-align:center}.pagination__page.active a{pointer-events:none;color:#fff;background:#7e0f0f}html{font-size:15px}body,html{width:100%;height:100%}body{font-family:"PT Sans",sans-serif;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;-moz-font-feature-settings:'liga','kern'}a{color:currentColor}.breadcrumbs{margin:0;padding:20px;list-style:none;font-size:14px;border-top:10px solid #7e0f0f}.breadcrumbs__item{display:inline-block;vertical-align:top;color:#7e0f0f}.breadcrumbs__item:last-child,.btn{color:#000}.breadcrumbs__item::before{display:inline-block;margin:0 2px 0 5px;position:relative;border:5px solid transparent;border-left-color:#a5a5a5;content:'';width:0;height:0}.breadcrumbs__item:first-child::before{display:none}.breadcrumbs__item:last-child a{pointer-events:none;text-decoration:none}.container{display:table;width:100%;max-width:1280px;margin:0 auto;padding:0}.container__cell{display:table-cell;vertical-align:middle;width:50%;padding:15px 0}.btn{padding:10px 20px;font-size:17px;font-weight:600;border:none;border-radius:100px;background:#fff68c}.btn_red{color:#fff;background:#7e0f0f;height:33px;line-height:33px;font-size:16px;text-transform:none;padding:0 20px 0 45px}.btn_lk{margin-right:23px}.btn_lk::before{position:absolute;left:14px;transform:translateY(-50%) translate3d(0,0,0);width:21px;height:21px;background:url(../img/icons/lk.png) no-repeat}.btn_slide{position:absolute;right:50px;bottom:42px}.btn_dwnld{vertical-align:top;height:33px}.btn_dwnld::before{position:absolute;left:16px;-webkit-transform:translateY(-50%) translate3d(0,0,0);transform:translateY(-50%) translate3d(0,0,0);width:18px;height:16px;background:url(../img/icons/dwnld.png) no-repeat}.title{margin:0 0 25px;font-size:36px;font-weight:600}.caption{display:inline-block;margin:0 0 15px;font-size:28px;font-weight:600}.section{padding-left:20px;margin-bottom:140px}.section__main{display:inline-block;vertical-align:top;width:900px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
