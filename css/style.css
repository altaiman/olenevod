/*! normalize.css v3.0.1 | MIT License | git.io/normalize */img,legend{border:0}legend,td,th{padding:0}.logo,sub,sup{position:relative}.footer::before,.lang__btn::before{content:''}.about__program a,.lang a,.menu__link{text-decoration:none}.xdsoft_flipcountdown{display:inline-block}.xdsoft_flipcountdown .xdsoft_digit{float:left;background-repeat:no-repeat}.xdsoft_flipcountdown .xdsoft_clearex{clear:both;float:none}.xdsoft_flipcountdown>.xdsoft_digit{background-position:0 0}.xdsoft_flipcountdown>.xdsoft_digit.xdsoft_dot,.xdsoft_flipcountdown>.xdsoft_digit.xdsoft_separator{opacity:.9}.xdsoft_flipcountdown.xdsoft_size_lg>.xdsoft_digit{width:53px;height:76px;background-image:url(img/digit-lg.png)}.xdsoft_flipcountdown.xdsoft_size_lg>.xdsoft_digit.xdsoft_dot,.xdsoft_flipcountdown.xdsoft_size_lg>.xdsoft_digit.xdsoft_separator,.xdsoft_flipcountdown.xdsoft_size_lg>.xdsoft_digit.xdsoft_space{width:14px;background-position:-19px -5082px}.xdsoft_flipcountdown.xdsoft_size_lg>.xdsoft_digit.xdsoft_dot{background-position:-41px -5082px}.xdsoft_flipcountdown.xdsoft_size_lg>.xdsoft_digit.xdsoft_space{background-position:-100px -5082px}.xdsoft_flipcountdown.xdsoft_size_md>.xdsoft_digit{width:36px;height:51px;background-image:url(img/digit-md.png)}.xdsoft_flipcountdown.xdsoft_size_md>.xdsoft_digit.xdsoft_dot,.xdsoft_flipcountdown.xdsoft_size_md>.xdsoft_digit.xdsoft_separator,.xdsoft_flipcountdown.xdsoft_size_md>.xdsoft_digit.xdsoft_space{width:10px;background-position:-13px -3432px}.xdsoft_flipcountdown.xdsoft_size_sm>.xdsoft_digit{width:24px;height:34px;background-image:url(img/digit-sm.png)}.xdsoft_flipcountdown.xdsoft_size_sm>.xdsoft_digit.xdsoft_dot,.xdsoft_flipcountdown.xdsoft_size_sm>.xdsoft_digit.xdsoft_separator,.xdsoft_flipcountdown.xdsoft_size_sm>.xdsoft_digit.xdsoft_space{width:10px;background-position:-6px -2310px}.xdsoft_flipcountdown.xdsoft_size_xs>.xdsoft_digit{width:16px;height:23px;background-image:url(img/digit-xs.png)}.xdsoft_flipcountdown.xdsoft_size_xs>.xdsoft_digit.xdsoft_dot,.xdsoft_flipcountdown.xdsoft_size_xs>.xdsoft_digit.xdsoft_separator,.xdsoft_flipcountdown.xdsoft_size_xs>.xdsoft_digit.xdsoft_space{width:5px;background-position:-5px -1584px}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}.footer__cell,.lang span,.lang__btn,.logo__img,.logo__title{vertical-align:top}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}.events__slider,.footer,.n-item__pic,.news__pic{overflow:hidden}button,select{text-transform:none}.btn,.logo__title{text-transform:uppercase}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}.container,body *{box-sizing:border-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}.header{height:92px;background:#e1e1e1}.logo__img{position:absolute;left:0;top:-10px;display:inline-block}.lang,.lang__btn{position:relative;display:inline-block}.logo__title{display:inline-block;margin:0 0 0 200px;font-size:22px;font-weight:700}.lang{top:-8px;margin:0 0 0 60px;color:#aaa;font-size:18px;font-weight:600}.lang[data-lang=ru] .lang__ru,.lang[data-lang=eng] .lang__eng{color:#000}.lang[data-lang=ru] .lang__btn::before{left:-2px}.lang[data-lang=eng] .lang__btn::before{left:auto;right:-1px}.lang span{display:inline-block}.lang__btn{background:url(../img/lang-bar.png) center no-repeat;width:63px;height:28px;border-radius:100px;margin:0 8px}.lang__btn::before{position:absolute;top:0;width:30px;height:30px;background:url(../img/lang-btn.png) center no-repeat}.footer{position:relative;padding:80px 0;font-size:14px;line-height:1.6;background:#e1e1e1}.footer::before{position:absolute;left:10px;top:-60px;width:1457px;height:379px;background:url(../img/folen.png) no-repeat}.footer__cell{display:table-cell;width:25%}.footer__cell_wide{width:50%;text-align:right}.footer__caption{display:block;margin-bottom:10px;font-size:18px;font-weight:600}.develop img,.develop p,.menu__item{display:inline-block;vertical-align:top}.footer__list{margin:0;padding:0;list-style:none}.footer__item{margin-bottom:3px}.footer p{margin:0 0 10px}.develop{padding:15px;margin:50px 0 0 auto;width:250px;border:1px solid #b0b0b0;text-align:left;line-height:1}.develop p{margin:0 0 0 5px;font-size:12px}.develop i{font-size:8px;font-style:normal}.menu{margin-left:180px}.drop,.menu__list{margin:0;list-style:none}.menu__list{padding:0;font-size:0}.menu__item,.slide__content p{font-size:18px;font-weight:600}.menu__item{position:relative;z-index:3}.menu__item.active .menu__link,.menu__item:hover .menu__link{color:#7e0f0f;background:#fff68c}.menu__item:hover>.drop{display:block}.menu__link{display:inline-block;float:left;vertical-align:top;padding:20px}.menu__link a{color:inherit}.drop{display:none;position:absolute;left:0;top:100%;background:#fff68c;padding:10px 50px 20px 20px;white-space:nowrap}.drop__item{margin:10px 0}.drop__item:first-child{margin-top:0}.drop__item:last-child{margin-bottom:0}.events__slider{margin:0;padding:0;list-style:none;max-width:1280px}.slide{position:relative;display:inline-block;vertical-align:top;width:100%;height:454px}.slide__content,.slide__img{position:absolute;bottom:0;left:0}.slide__img{top:0;right:0}.about__program a::before,.about__program::before{top:50%;content:''}.slide__content{width:100%;padding:42px 50px;color:#fff;background:rgba(72,0,0,.8)}.slide__content p{margin:0}.slide__content strong{display:inline-block;margin-bottom:15px;font-size:30px;font-weight:600}.about{display:table;margin:60px 0;width:100%}.about__program{position:relative;display:table-cell;vertical-align:middle;width:25%;text-align:center}.about__text,.n-item__pic,.news__item{vertical-align:top}.about__program::before{position:absolute;z-index:-1;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:118px;height:118px;border-radius:50%;background:#fff68c}.about__program a{position:relative;left:10px;display:inline-block;padding-left:100px;font-size:24px;line-height:1;width:220px;text-align:left}.n-item__text,.news__text{color:#7e0f0f;text-decoration:underline}.about__program a::before{position:absolute;left:0;-webkit-transform:translateY(-50%) translate3d(0,0,0);transform:translateY(-50%) translate3d(0,0,0);width:83px;height:81px;background:url(../img/icons/programma.png) no-repeat}.n-item__link,.news__link{left:0;top:0;bottom:0;right:0}.about__text-wrap{width:470px;margin:0 auto 0 20px}.about__text{display:table-cell;padding:60px 0;width:75%;background:url(../img/karlin.jpg) right top no-repeat}.about__text p{font-size:15px;margin:0 0 20px}.news__list{display:table;width:100%;margin:30px 0;padding:0;list-style:none}.news__item{position:relative;display:table-cell;width:33%}.news__pic,.news__text{display:inline-block;vertical-align:top}.news__pic{width:75px}.news__pic img{max-width:100%}.news__text{max-width:260px;width:calc(100% - 100px);margin:-5px 0 0 15px;line-height:1.6}.news__link{position:absolute}.n-item{position:relative;margin-bottom:35px}.n-item__pic{display:inline-block;width:85px}.n-item__pic img{max-width:100%}.n-item__info{display:inline-block;max-width:600px;width:calc(100% - 140px);margin:-5px 0 0 15px;line-height:1.6}.n-item__text{margin:0 0 5px}.n-item__link{position:absolute}.n-item__date{font-size:14px;color:#777}.sponsor{position:relative;margin:125px 0;padding:70px 50px;border:2px solid #ededed}.sponsor__title{position:absolute;left:50%;top:-36px;padding:0 15px;color:#7b7b7b;background:#fff;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.btn_lk::before,.program__cell_time::before{-webkit-transform:translateY(-50%) translate3d(0,0,0)}.sponsor__list{display:table;width:100%;margin:0;padding:0;list-style:none}.sponsor__item{position:relative;display:table-cell;vertical-align:middle;width:20%;text-align:center}.sponsor__item a{position:absolute;left:0;top:0;right:0;bottom:0}.sponsor_page{margin:0;padding:0;width:880px;border:none}.sponsor_page .sponsor__list{display:block}.sponsor_page .sponsor__item{display:inline-block;font-size:0;margin-right:5%;margin-bottom:40px}.sponsor_page .sponsor__item:nth-child(4n){margin-right:0}.docs{margin:0;padding:0;list-style:none;width:100%;max-width:760px}.docs__item{position:relative;display:block;margin-left:30px;padding-left:80px;min-height:100px;margin-bottom:20px}.docs__info,.docs__name,.sidebar{display:inline-block}.docs__item::before{position:absolute;left:0;top:0;width:39px;height:46px;content:'';background:url(../img/icons/doc.png) no-repeat}.docs__info{width:440px;margin-right:80px}.docs__name{margin:0 0 10px;font-size:18px;color:#7e0f0f}.docs__update{margin:0;font-size:14px}.sidebar{vertical-align:top;width:295px}.sidebar__block{display:block;padding:30px;margin-bottom:30px;background:#e1e1e1}.sidebar__menu{margin:0;padding:0;list-style:none;font-size:18px;font-weight:600}.sidebar__menu-item{margin-bottom:10px}.sidebar__menu-item a{text-decoration:none}.sidebar__menu-item.active a{color:#7e0f0f;pointer-events:none}.sidebar__caption{font-size:24px;font-weight:600;margin:0 0 15px}.sidebar__news{margin:0;padding:0;list-style:none;color:#7e0f0f}.sidebar__news-item{position:relative;padding-bottom:20px;margin-bottom:20px}.sidebar__news-item::after{position:absolute;bottom:0;left:-28px;width:calc(100% + 56px);height:1px;content:'';background:#a3a3a3}.sidebar__news-item:last-child{margin-bottom:0;padding-bottom:0}.sidebar__news-item:last-child::after{display:none}.partners{margin:0;padding:0 0 75px;list-style:none;border-bottom:1px solid #acacac}.partners__item{margin-bottom:32px}.partners__item:last-child{margin-bottom:0}.partners__photo{display:inline-block;vertical-align:top}.partners__info{display:inline-block;vertical-align:top;margin-left:20px}.partners__name{display:inline-block;font-size:18px;color:#7e0f0f;margin-bottom:12px}.partners__company{display:block;font-size:14px;color:#777}.pagination{margin:40px 0;font-size:14px;color:#444}.pagination__btn{display:inline-block;margin:0;padding:0 16px;height:32px;line-height:28px;white-space:nowrap;border:2px solid #eff0f1;border-radius:20px;text-decoration:none}.blog-page-navigation a,.pagination__page a{width:32px;line-height:30px;border-radius:50%;height:32px;text-align:center;display:inline-block;vertical-align:top;text-decoration:none}.pagination__btn.disabled{pointer-events:none;color:#aab1b4}.pagination__pages{display:inline-block;vertical-align:top;margin:0;padding:0;list-style:none}.pagination__page{display:inline-block;vertical-align:top;margin:0 2px}.pagination__page a{background:#eff0f1}.pagination__page.active a{pointer-events:none;color:#fff;background:#7e0f0f}.blog-page-navigation a{background:#eff0f1}.blog-page-navigation a.blog-page-next,.blog-page-navigation a.blog-page-previous{display:inline-block;margin:0;padding:0 16px;width:auto;height:32px;line-height:28px;white-space:nowrap;border:2px solid #eff0f1;border-radius:20px;text-decoration:none;background:0 0}.blog-page-navigation .blog-page-current{display:inline-block;vertical-align:top;width:32px;height:32px;line-height:30px;border-radius:50%;text-align:center;text-decoration:none;pointer-events:none;color:#fff;background:#7e0f0f}.blog-page-navigation .blog-vert-separator{font-size:0;margin:0 1px}.faq__list{width:100%;max-width:790px;margin:0;padding:0;list-style:none}.faq__item{margin-bottom:30px}.faq__question{display:inline-block;font-size:18px;font-weight:600;color:#7e0f0f;border-bottom:1px dotted currentColor;cursor:pointer}.program,.program__row_head{border-bottom:1px solid #9c9c9c}.faq__question.open{color:#000}.ask__title,.program::before{color:#7e0f0f;font-weight:600}.faq__question.open+.faq__answer{display:block}.faq__answer{display:none;margin-bottom:50px;line-height:1.6;padding-left:30px}.ask{width:885px;margin:30px 0 0;padding:30px 20px;background:#d7d3a4}.ask__title{margin:0 0 30px;font-size:24px}.ask__form,.program{font-size:15px}.ask__row{display:table;width:100%;max-width:570px;margin-bottom:20px}.ask__cell{display:table-cell;vertical-align:top}.ask__cell:nth-child(1){width:35%}.ask__cell::nth-child(2){width:65%}.ask__cell span{display:inline-block;margin-top:2px}.ask__cell input,.ask__cell textarea{display:block;width:100%}.ask__cell textarea{resize:none;width:370px;height:120px}.program{position:relative;width:98%;text-align:left;margin-bottom:50px}.program::before{position:absolute;left:10px;top:-30px;display:block;font-size:18px;content:attr(data-date)}.breadcrumbs__item::before,.btn_dwnld::before,.btn_lk::before,.program__cell_time::before{content:''}.program__row:nth-child(even){background:#e6e6e6}.program__row_head{white-space:nowrap;font-size:18px;background:0 0!important}.program__cell{padding:20px 50px 20px 10px}.program__cell:first-child{width:200px}.program__cell:nth-child(2){width:400px}.program__cell:nth-child(3){width:120px}.program__cell:nth-child(4){width:200px}.program__cell_time{position:relative;padding-left:25px}.program__cell_time::before{position:absolute;left:0!important;top:50%!important;transform:translateY(-50%) translate3d(0,0,0);width:17px;height:17px;background:url(../img/icons/time.png) no-repeat}.btn,.container{position:relative}html{font-size:15px}body,html{width:100%;height:100%}body{font-family:"PT Sans",sans-serif;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;-moz-font-feature-settings:'liga','kern'}a{color:currentColor}.breadcrumbs{margin:0;padding:20px;list-style:none;font-size:14px;border-top:10px solid #7e0f0f}.breadcrumbs__item{display:inline-block;vertical-align:top;color:#7e0f0f}.breadcrumbs__item:last-child,.btn{color:#000}.breadcrumbs__item::before{display:inline-block;margin:0 2px 0 5px;position:relative;border:5px solid transparent;border-left-color:#a5a5a5;width:0;height:0}.breadcrumbs__item:first-child::before{display:none}.breadcrumbs__item:last-child a{pointer-events:none;text-decoration:none}.container{display:table;width:100%;max-width:1280px;margin:0 auto;padding:0}.container__cell{display:table-cell;vertical-align:middle;width:50%;padding:15px 0}.btn,.caption,.countdown,.section__main{display:inline-block}.btn{padding:10px 20px;font-size:17px;font-weight:600;border:none;border-radius:100px;background:#fff68c;text-decoration:none}.btn_lk,.btn_lk::before,.btn_slide{position:absolute}.btn_red{color:#fff;background:#7e0f0f;height:33px;line-height:33px;font-size:16px;text-transform:none;padding:0 20px;margin-left:200px}.btn_lk{right:0;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);padding:0 20px 0 45px;margin-right:23px;text-decoration:none}.btn_lk::before{left:14px;top:50%;transform:translateY(-50%) translate3d(0,0,0);width:21px;height:21px;background:url(../img/icons/lk.png) no-repeat}.btn_slide{right:50px;bottom:42px}.btn_allnews{float:right}.btn_dwnld{vertical-align:top;height:33px;margin-left:0;padding-left:40px}.btn_dwnld::before{position:absolute;left:16px;top:50%;-webkit-transform:translateY(-50%) translate3d(0,0,0);transform:translateY(-50%) translate3d(0,0,0);width:18px;height:16px;background:url(../img/icons/dwnld.png) no-repeat}.title{margin:0 0 25px;font-size:36px;font-weight:600}.caption{margin:0 0 15px;font-size:28px;font-weight:600}.section{padding-left:20px;margin-bottom:140px}.section__main{vertical-align:top;width:900px}.list{margin:0;padding:0 0 10px;list-style:none;border-bottom:1px solid #acacac}.content{width:100%;max-width:820px}.content p{margin:0 0 30px;font-size:15px;color:#000;line-height:1.6;text-align:left}.content h2{margin:50px 0 30px;font-size:24px;font-weight:400}.content h3{margin:0 0 30px;font-size:18px;font-weight:600}.content img{margin:0 0 30px;max-width:100%}.countdown{height:20px;position:relative;top:5px}.card__title{display:block;margin-bottom:25px;font-size:18px;font-weight:700}.card p{color:#5a5a5a;margin:20px 0 0}.lk{padding:60px 0 0 20px;margin-top:120px;width:880px;border-top:6px solid #7e0f0f}.lk__title{display:block;font-size:24px;font-weight:600;margin:0 0 40px}.form span{font-weight:700}.form__row{display:block;margin-bottom:20px}.form__cell{display:table-cell}.form__cell:first-child{width:240px;padding-right:20px}.form__cell:nth-child(2){width:375px}.form input{padding:0 15px;width:100%;height:33px;border:1px solid #ccc}.form__buttons{margin-top:30px}.form__buttons button{margin-right:10px}input.error{border:1px solid red}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
